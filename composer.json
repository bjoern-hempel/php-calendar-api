{
    "type": "project",
    "license": "proprietary",
    "minimum-stability": "stable",
    "prefer-stable": true,
    "require": {
        "php": ">=8.1",
        "ext-ctype": "*",
        "ext-curl": "*",
        "ext-exif": "*",
        "ext-fileinfo": "*",
        "ext-gd": "*",
        "ext-iconv": "*",
        "api-platform/core": "^3.0",
        "chillerlan/php-qrcode": "^4.3",
        "composer/package-versions-deprecated": "1.11.99.4",
        "creof/doctrine2-spatial": "^1.2",
        "doctrine/annotations": "^1.0",
        "doctrine/doctrine-bundle": "^2.7",
        "doctrine/doctrine-migrations-bundle": "^3.2",
        "doctrine/orm": "^2.13",
        "easycorp/easyadmin-bundle": "^4.0",
        "gesdinet/jwt-refresh-token-bundle": "^1.1",
        "lexik/jwt-authentication-bundle": "^2.14",
        "nelmio/cors-bundle": "^2.2",
        "opis/json-schema": "^2.3",
        "phpdocumentor/reflection-docblock": "^5.3",
        "phpstan/phpdoc-parser": "^1.9",
        "sensio/framework-extra-bundle": "^6.2",
        "symfony/asset": "6.1.*",
        "symfony/config": "6.1.*",
        "symfony/console": "6.1.*",
        "symfony/dependency-injection": "6.1.*",
        "symfony/deprecation-contracts": "^3.0",
        "symfony/dotenv": "6.1.*",
        "symfony/error-handler": "6.1.*",
        "symfony/expression-language": "6.1.*",
        "symfony/flex": "^2",
        "symfony/form": "6.1.*",
        "symfony/framework-bundle": "6.1.*",
        "symfony/http-client": "6.1.*",
        "symfony/http-foundation": "6.1.*",
        "symfony/http-kernel": "6.1.*",
        "symfony/mime": "6.1.*",
        "symfony/monolog-bundle": "^3.7",
        "symfony/password-hasher": "6.1.*",
        "symfony/property-access": "6.1.*",
        "symfony/property-info": "6.1.*",
        "symfony/proxy-manager-bridge": "6.1.*",
        "symfony/runtime": "6.1.*",
        "symfony/security-bundle": "6.1.*",
        "symfony/serializer": "6.1.*",
        "symfony/twig-bundle": "6.1.*",
        "symfony/validator": "6.1.*",
        "symfony/web-link": "6.1.*",
        "symfony/webpack-encore-bundle": "^1.16",
        "symfony/yaml": "6.1.*"
    },
    "require-dev": {
        "doctrine/doctrine-fixtures-bundle": "^3.4",
        "friendsofphp/php-cs-fixer": "^3.4",
        "jetbrains/phpstorm-attributes": "^1.0",
        "phpstan/extension-installer": "^1.1",
        "phpstan/phpstan": "^1.8",
        "phpstan/phpstan-doctrine": "^1.3",
        "phpunit/phpunit": "^9.5",
        "povils/phpmnd": "^3.0",
        "rector/rector": "^0.14.8",
        "symfony/browser-kit": "6.1.*",
        "symfony/css-selector": "6.1.*",
        "symfony/maker-bundle": "^1.36",
        "symfony/phpunit-bridge": "^6.1",
        "symfony/stopwatch": "6.1.*",
        "symfony/web-profiler-bundle": "6.1.*"
    },
    "config": {
        "allow-plugins": {
            "composer/package-versions-deprecated": true,
            "symfony/flex": true,
            "symfony/runtime": true,
            "phpstan/extension-installer": true
        },
        "optimize-autoloader": true,
        "preferred-install": {
            "*": "dist"
        },
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php80": "*"
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd",
            "lexik:jwt:generate-keypair --skip-if-exists": "symfony-cmd"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],

        "ixno:header": "bin/header/ixno",

        "db:initialize:test": "bin/header/dbinit 'bin/console db:reinitialize --format=text --env=test' 'Test-DB Initialization'",
        "db:initialize:main": "for dump in fixtures/db/*.sql; do mysql -h127.0.0.1 -P3306 -uphp-calendar-api -pphp-calendar-api --default-character-set=utf8 opa < \"$dump\"; done",

        "phpmnd:src": "bin/header/phpmnd 'vendor/bin/phpmnd run src --progress --hint --include-numeric-string --ignore-funcs=round,sleep' 'src'",
        "phpmnd:tests": "bin/header/phpmnd 'vendor/bin/phpmnd run tests --progress --hint --include-numeric-string --ignore-funcs=round,sleep' 'tests'",
        "phpmnd:all": "bin/header/phpmnd 'vendor/bin/phpmnd run src tests --progress --hint --include-numeric-string --ignore-funcs=round,sleep' 'all'",
        "phpmnd": [
            "@phpmnd:all"
        ],

        "phpunit:api": "bin/header/phpunit 'vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.api.xml' 'API'",
        "phpunit:functional": "bin/header/phpunit 'vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.functional.xml' 'Functional'",
        "phpunit:unit": "bin/header/phpunit 'vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.unit.xml' 'Unit'",
        "phpunit:api:coverage": "bin/header/phpunit 'XDEBUG_MODE=coverage vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.api.xml --coverage-text' 'API'",
        "phpunit:functional:coverage": "bin/header/phpunit 'XDEBUG_MODE=coverage vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.functional.xml --coverage-text' 'Functional'",
        "phpunit:unit:coverage": "bin/header/phpunit 'XDEBUG_MODE=coverage vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.unit.xml --coverage-text' 'Unit'",
        "phpunit:api:debug": "bin/header/phpunit 'PHPUNIT_DEBUG=1 vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.api.xml' 'API'",
        "phpunit:functional:debug": "bin/header/phpunit 'PHPUNIT_DEBUG=1 vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.functional.xml' 'Functional'",
        "phpunit:unit:debug": "bin/header/phpunit 'PHPUNIT_DEBUG=1 vendor/bin/phpunit -d memory_limit=512M --configuration phpunit.unit.xml' 'Unit'",
        "phpunit:all": [
            "@phpunit:unit",
            "@phpunit:functional",
            "@phpunit:api"
        ],
        "phpunit:all:coverage": [
            "@phpunit:unit:coverage",
            "@phpunit:functional:coverage",
            "@phpunit:api:coverage"
        ],
        "phpunit:all:debug": [
            "@phpunit:unit:debug",
            "@phpunit:functional:debug",
            "@phpunit:api:debug"
        ],
        "phpunit": [
            "@phpunit:all"
        ],

        "phpstan:run:soft": "bin/header/phpstan 'export XDEBUG_MODE=off && vendor/bin/phpstan analyse --level 5 --memory-limit 512M src tests' 'run'",
        "phpstan:run": "bin/header/phpstan 'export XDEBUG_MODE=off && vendor/bin/phpstan analyse --level max --memory-limit 512M src tests' 'run'",
        "phpstan:run:xdebug": "bin/header/phpstan 'export XDEBUG_MODE=off && vendor/bin/phpstan analyse --level max --memory-limit 512M --xdebug src tests' 'run'",
        "phpstan": [
            "@phpstan:run"
        ],

        "phpcs:check:src": "bin/header/phpcs 'vendor/bin/php-cs-fixer --dry-run --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose fix src 2>/dev/null' 'src'",
        "phpcs:check:tests": "bin/header/phpcs 'vendor/bin/php-cs-fixer --dry-run --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose fix tests 2>/dev/null' 'tests'",
        "phpcs:check:all": "bin/header/phpcs 'vendor/bin/php-cs-fixer --dry-run --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose fix src 2>/dev/null && vendor/bin/php-cs-fixer --dry-run --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose fix tests 2>/dev/null' 'all'",
        "phpcs": [
            "@phpcs:check:all"
        ],
        "phpcs:fix:src": "bin/header/phpcs 'vendor/bin/php-cs-fixer --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose -v fix src 2>/dev/null' 'src'",
        "phpcs:fix:tests": "bin/header/phpcs 'vendor/bin/php-cs-fixer --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose -v fix tests 2>/dev/null' 'tests'",
        "phpcs:fix:all": "bin/header/phpcs 'vendor/bin/php-cs-fixer --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose -v fix src 2>/dev/null && vendor/bin/php-cs-fixer --using-cache=no --rules=@PSR12 --rules=no_unused_imports --verbose -v fix tests 2>/dev/null' 'all'",

        "rector:check:clear": "bin/header/rector 'vendor/bin/rector process --dry-run --clear-cache --memory-limit=512M' 'check, force'",
        "rector:fix:clear": "bin/header/rector 'vendor/bin/rector process --clear-cache --memory-limit=512M' 'fix, force'",
        "rector:check": "bin/header/rector 'vendor/bin/rector process --dry-run --memory-limit=512M' 'check'",
        "rector:fix": "bin/header/rector 'vendor/bin/rector process --memory-limit=512M' 'fix'",
        "rector": [
            "@rector:check"
        ],
        "rector:clear": [
            "@rector:check:clear"
        ],

        ".test:basic": [
            "@ixno:header",
            "@phpunit",
            "@phpstan"
        ],
        "test:basic": [
            "composer .test:basic && bin/header/success || bin/header/error"
        ],
        ".test:most": [
            "@ixno:header",
            "@phpmnd",
            "@phpunit",
            "@phpstan",
            "@phpcs"
        ],
        "test:most": [
            "composer .test:most && bin/header/success || bin/header/error"
        ],
        ".test:all": [
            "@ixno:header",
            "@phpmnd",
            "@phpunit",
            "@phpstan",
            "@phpcs"
        ],
        "test:all": [
            "composer .test:all && bin/header/success || bin/header/error"
        ],
        ".test:hardcore": [
            "@ixno:header",
            "@phpmnd",
            "@phpunit",
            "@phpstan",
            "@phpcs",
            "@rector:clear"
        ],
        "test:hardcore": [
            "composer .test:hardcore && bin/header/success || bin/header/error"
        ],
        "test": [
            "@test:all"
        ],

        "drop-schema-prod": "bin/console doctrine:schema:drop --force",
        "drop-schema-test": "bin/console doctrine:schema:drop --force --env=test",
        "create-schema-prod": "bin/console doctrine:schema:create",
        "create-schema-test": "bin/console doctrine:schema:create --env=test",
        "load-fixtures-prod": "bin/console doctrine:fixtures:load -n",
        "load-fixtures-test": "bin/console doctrine:fixtures:load -n --env=test --group=test",
        "migrate-prod": "bin/console doctrine:migrations:migrate -n",
        "migrate-test": "bin/console doctrine:migrations:migrate -n --env=test",
        "jwt-generate-keypair": "bin/console lexik:jwt:generate-keypair --skip-if-exists"
    },
    "scripts-descriptions": {
        ".test:all": " ",
        ".test:basic": " ",
        ".test:hardcore": " ",
        ".test:most": " ",

        "db:initialize:test": "Initializes the test db.",
        "db:initialize:main": "Initializes the main db.",

        "doc:build:schema": "Builds schema documents.",
        "doc:build:endpoint": "Builds endpoint documents.",
        "doc:build": "Builds all documents.",

        "version:main:patch": "Increases the main patch version.",
        "version:main:show": "Shows the current versions.",

        "rsm:header": "Prints the ressourcenmangel integral GmbH header.",

        "phpcs": "Runs PHP Coding Standards Fixer (Dry-Run, all folders).",
        "phpcs:check:all": "Runs PHP Coding Standards Fixer (Dry-Run, all folders).",
        "phpcs:check:src": "Runs PHP Coding Standards Fixer (Dry-Run, src folder).",
        "phpcs:check:tests": "Runs PHP Coding Standards Fixer (Dry-Run, tests folder).",
        "phpcs:fix:all": "Runs PHP Coding Standards Fixer (Fix, all folders).",
        "phpcs:fix:src": "Runs PHP Coding Standards Fixer (Fix, src folder).",
        "phpcs:fix:tests": "Runs PHP Coding Standards Fixer (Fix, tests folder).",

        "phpmd": "Runs PHP Mess Detector and checks all types (all folders).",
        "phpmd:all": "Runs PHP Mess Detector and checks all types (all folders).",
        "phpmd:all-src": "Runs PHP Mess Detector and checks all types (src folder).",
        "phpmd:all-tests": "Runs PHP Mess Detector and checks all types (tests folder).",
        "phpmd:cleancode": "Runs PHP Mess Detector and checks for cleancode (all folders).",
        "phpmd:codesize": "Runs PHP Mess Detector and checks for codesize (all folders).",
        "phpmd:controversial": "Runs PHP Mess Detector and checks for controversial (all folders).",
        "phpmd:design": "Runs PHP Mess Detector and checks for design (all folders).",
        "phpmd:naming": "Runs PHP Mess Detector and checks for naming (all folders).",
        "phpmd:unusedcode": "Runs PHP Mess Detector and checks for unusedcode (all folders).",
        "phpmd:cleancode-src": "Runs PHP Mess Detector and checks for cleancode (src folder).",
        "phpmd:codesize-src": "Runs PHP Mess Detector and checks for codesize (src folder).",
        "phpmd:controversial-src": "Runs PHP Mess Detector and checks for controversial (src folder).",
        "phpmd:design-src": "Runs PHP Mess Detector and checks for design (src folder).",
        "phpmd:naming-src": "Runs PHP Mess Detector and checks for naming (src folder).",
        "phpmd:unusedcode-src": "Runs PHP Mess Detector and checks for unusedcode (src folder).",
        "phpmd:cleancode-tests": "Runs PHP Mess Detector and checks for cleancode (tests folder).",
        "phpmd:codesize-tests": "Runs PHP Mess Detector and checks for codesize (tests folder).",
        "phpmd:controversial-tests": "Runs PHP Mess Detector and checks for controversial (tests folder).",
        "phpmd:design-tests": "Runs PHP Mess Detector and checks for design (tests folder).",
        "phpmd:naming-tests": "Runs PHP Mess Detector and checks for naming (tests folder).",
        "phpmd:unusedcode-tests": "Runs PHP Mess Detector and checks for unusedcode (tests folder).",

        "phpmnd": "Runs PHP Magic Number Detector and detects magic numbers.",
        "phpmnd:all": "Runs PHP Magic Number Detector and detects magic numbers (all folders).",
        "phpmnd:src": "Runs PHP Magic Number Detector and detects magic numbers (src folder).",
        "phpmnd:tests": "Runs PHP Magic Number Detector and detects magic numbers (tests folder).",

        "phpstan": "Runs PHPStan (PHP Static Analysis Tool).",
        "phpstan:run": "Runs PHPStan (PHP Static Analysis Tool, Level max).",
        "phpstan:run:soft": "Runs PHPStan (PHP Static Analysis Tool, Level 5).",

        "phpunit": "Runs PHPUnit unit tests (all tests).",
        "phpunit:all": "Runs PHPUnit unit tests (all tests).",
        "phpunit:all:coverage": "Runs PHPUnit unit tests with Code Coverage Analysis (all tests).",
        "phpunit:all:debug": "Runs PHPUnit unit tests (debug mode, all tests).",
        "phpunit:api": "Runs PHPUnit unit tests (api tests).",
        "phpunit:api:coverage": "Runs PHPUnit unit tests with Code Coverage Analysis (api tests).",
        "phpunit:api:debug": "Runs PHPUnit unit tests (debug mode, api tests).",
        "phpunit:functional": "Runs PHPUnit unit tests (functional tests).",
        "phpunit:functional:coverage": "Runs PHPUnit unit tests with Code Coverage Analysis (functional tests).",
        "phpunit:functional:debug": "Runs PHPUnit unit tests (debug mode, functional tests).",
        "phpunit:unit": "Runs PHPUnit unit tests (unit tests).",
        "phpunit:unit:coverage": "Runs PHPUnit unit tests with Code Coverage Analysis (unit tests).",
        "phpunit:unit:debug": "Runs PHPUnit unit tests (debug mode, unit tests).",

        "rector": "Runs PHP Rector (Dry-Run).",
        "rector:check": "Runs PHP Rector (Dry-Run).",
        "rector:check:clear": "Runs PHP Rector (Dry-Run, Clear).",
        "rector:clear": "Runs PHP Rector (Dry-Run, Clear).",
        "rector:fix": "Runs PHP Rector (Fix).",
        "rector:fix:clear": "Runs PHP Rector (Fix, Force).",

        "test": "Runs all available tests (phpmnd, phpunit, phpstan, phpcs, rector).",
        "test:all": "Runs all available tests (phpmnd, phpunit, phpstan, phpcs, phpmd).",
        "test:hardcore": "Runs the ultimate available tests (phpmnd, phpunit, phpstan, phpcs, rector, phpmd).",
        "test:most": "Runs most tests (phpmnd, phpunit, phpstan, phpcs).",
        "test:basic": "Runs basic tests (phpunit, phpstan)."
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "extra": {
        "symfony": {
            "allow-contrib": false,
            "require": "6.1.*"
        }
    }
}
